{"version":3,"sources":["components/task4/task4.module.css","components/task3/task3.module.css","components/task1/task1.module.css","components/task2/task2.module.css","components/task2/section.module.css","components/task1/task1.js","components/task2/task2.js","components/task2/section.js","components/task3/task3.js","components/task3/list3.js","components/task4/task4.js","App.js","index.js"],"names":["module","exports","Profile","username","tag","location","avatar","stats","className","s","profile","description","src","alt","followers","views","likes","Сell","key","label","percentage","container","color","item","Number","id","replace","Statistics","items","title","list","map","elem","style","backgroundColor","CardFriend","name","isOnline","listOnline","statusOnline","statusOfline","width","FriendList","friends","friend","TransactionHistory","transTable","table","th","td","type","amount","currency","App","user","data","transactions","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4fffb3da.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"transTable\":\"task4_transTable__2WYE7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"task3_container__2i1Nm\",\"statusOnline\":\"task3_statusOnline__2uu33\",\"statusOfline\":\"task3_statusOfline__3TNwn\",\"list\":\"task3_list__3q_tn\",\"listOnline\":\"task3_listOnline__ZOo9o\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"task1_profile__25ofJ\",\"avatar\":\"task1_avatar__1nLL2\",\"description\":\"task1_description__1l3tw\",\"stats\":\"task1_stats__39iBT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"task2_container__1u0p2\",\"label\":\"task2_label__3BeCK\",\"percentage\":\"task2_percentage__216Jz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"section_container__wC9Jh\",\"list\":\"section_list__3Fwsx\",\"elem\":\"section_elem__45gRm\"};","import PropTypes from 'prop-types';\r\nimport s from './task1.module.css';\r\n\r\nconst Profile = ({username, tag , location , avatar , stats}) =>{\r\nreturn (\r\n  <div className={s.profile}>\r\n  <div className={s.description}>\r\n    <img\r\n      src={avatar}\r\n      alt={username}\r\n      className={s.avatar}\r\n    />\r\n    <p className=\"name\">{username}</p>\r\n    <p className=\"tag\">{tag}</p>\r\n    <p className=\"location\">{location}</p>\r\n  </div>\r\n\r\n  <ul className={s.stats}>\r\n    <li>\r\n      <span className=\"label\">Followers</span>\r\n      <span className=\"quantity\">{stats.followers}</span>\r\n    </li>\r\n    <li>\r\n      <span className=\"label\">Views</span>\r\n      <span className=\"quantity\">{stats.views}</span>\r\n    </li>\r\n    <li>\r\n      <span className=\"label\">Likes</span>\r\n      <span className=\"quantity\">{stats.likes}</span>\r\n    </li>\r\n  </ul>\r\n</div>)\r\n}\r\n\r\n\r\nProfile.propTypes = {\r\n  username: PropTypes.string.isRequired,\r\n  tag: PropTypes.string.isRequired,\r\n  location: PropTypes.string.isRequired,\r\n  avatar: PropTypes.string.isRequired,\r\n  stats:  PropTypes.object.isRequired,\r\n\r\n\r\n\r\n}\r\n\r\nexport default Profile;\r\n\r\n","import PropTypes from 'prop-types'\r\nimport s from './task2.module.css'\r\n\r\nconst Сell = ({key, label, percentage})=>{\r\n  return (\r\n   \r\n    <div className={s.container}>\r\n      \r\n\r\n      <span className={s.label}>{label}</span>\r\n      <span className={s.percentage}>{percentage}</span>\r\n      </div>\r\n)\r\n}\r\n\r\nСell.propTypes = {\r\n  label : PropTypes.string.isRequired,\r\n  percentage : PropTypes.number.isRequired,\r\n\r\n\r\n}\r\n\r\nexport default Сell;\r\n\r\n\r\n","import Сell from './task2'\r\nimport PropTypes from 'prop-types';\r\nimport s from './section.module.css'\r\n\r\nconst color = item => {\r\n  const colorArray = ['#E74C3C', '#8E44AD', '#3498DB', '#27AE60', '#F39C12'];\r\n  return `${colorArray[Number(item.id.replace(/[^0-9]/g, '')) % 5]}`;\r\n};\r\n\r\nconst  Statistics =  ({items,title}) =>\r\n{\r\n  return(\r\n    \r\n  <div className={s.container}>\r\n    {title && <h2>{title}</h2>}\r\n            <ul className={s.list}>\r\n            {items.map(item=>(\r\n              <li className={s.elem} style={{ backgroundColor: color(item) }} key = {item.id}>\r\n    <Сell \r\n      label = {item.label}\r\n      percentage = {item.percentage}\r\n    />\r\n              </li>\r\n    \r\n            ))}\r\n          </ul>\r\n          </div>\r\n          )\r\n}\r\n\r\nStatistics.propTypes = {\r\n  title: PropTypes.string,\r\nitems: PropTypes.arrayOf(\r\n  PropTypes.shape({\r\n    id: PropTypes.string.isRequired,\r\n  })\r\n)\r\n  \r\n}\r\n\r\n\r\nexport default Statistics;\r\n","import PropTypes from 'prop-types'\r\nimport s from './task3.module.css'\r\n\r\n\r\nconst CardFriend = ({avatar,name,isOnline}) => {\r\n\r\n    return (\r\n    <div className={s.listOnline}>\r\n            {isOnline ?\r\n                (<span className={s.statusOnline}>{' '}●</span>) : (<span className={s.statusOfline}>{' '} ●</span>)}\r\n<img className=\"avatar\" src={avatar} alt=\"User avatar\" width=\"48\" />\r\n<p className={s.name}>{name}</p>\r\n</div>\r\n)\r\n\r\n}\r\n\r\nCardFriend.propTypes={\r\n    avatar: PropTypes.string.isRequired,\r\n    name: PropTypes.string.isRequired,\r\n    isOnline:PropTypes.bool,\r\n}\r\n\r\n\r\n\r\n\r\nexport default CardFriend","import CardFriend from './task3'\r\nimport PropTypes from 'prop-types'\r\nimport s from './task3.module.css'\r\n\r\nconst FriendList = ({ friends }) => {\r\n    return (\r\n\r\n\r\n        <ul className={s.list}>\r\n    {friends.map(friend=>\r\n    (<li className={s.container} key={friend.id}>\r\n        <CardFriend\r\n        avatar= {friend.avatar}\r\n        name={friend.name}\r\n        isOnline={friend.isOnline}\r\n        id={friend.id}\r\n        />\r\n    </li>\r\n    )\r\n    )}\r\n</ul>\r\n)\r\n}\r\n \r\n\r\nFriendList.propTypes = {\r\n    friend:PropTypes.arrayOf(\r\n        PropTypes.shape({\r\n            id:PropTypes.string.isRequired,\r\n        })\r\n    )\r\n\r\n}\r\n\r\n\r\n\r\nexport default FriendList","// import PropTypes from 'prop-types'\r\nimport s from \"./task4.module.css\"\r\n\r\n\r\n\r\n\r\nconst TransactionHistory = ({items}) => {\r\nreturn (\r\n\r\n<div className={s.transTable}>\r\n<table className={s.table}>\r\n  <thead>\r\n    <tr>\r\n      <th className={s.th}>Type</th>\r\n      <th className={s.th}>Amount</th>\r\n      <th className={s.th}>Currency</th>\r\n    </tr>\r\n  </thead>\r\n\r\n  <tbody>\r\n  {items.map(item => \r\n    <tr key={item.id}>\r\n    <td className={s.td}>{item.type}</td>\r\n    <td className={s.td}>{item.amount}</td>\r\n    <td className={s.td}>{item.currency}</td>\r\n  </tr>\r\n\r\n    )}\r\n\r\n  </tbody>\r\n    </table>\r\n    </div>\r\n)\r\n}\r\n\r\n\r\n\r\nexport default TransactionHistory","import Profile from './components/task1/task1'\nimport user from '../src/listJSON/task1.json'\n// import Task2 from './task2/task2'\n\nimport data from '../src/listJSON/data.json'\nimport Statistics from './components/task2/section'\n\nimport FriendList from './components/task3/list3'\nimport friends from './listJSON/friend.json'\n// import data from '/путь/к/data.json';\n\nimport transactions from './listJSON/array4.json'\nimport TransactionHistory  from './components/task4/task4'\nimport { Fragment } from 'react'\n\n\nexport default function App (){\n  return (\n    <Fragment>\n  <Profile \n  username ={user.username}\n  tag = {user.tag}\n  location = {user.location}\n        avatar={user.avatar}\n         stats={user.stats} />\n      <Statistics title=\"Upload stats\" items={data} />\n      <Statistics items={data} />\n<FriendList friends = {friends}/>\n<TransactionHistory   items = {transactions}/>\n</Fragment>\n  );\n}\n\n","\nimport 'modern-normalize/modern-normalize.css';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App'\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n<App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}